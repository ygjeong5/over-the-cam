pipeline {
   agent any

   environment {
       DOCKERHUB_CREDENTIALS = credentials('docker')
       DOCKER_IMAGE = 'overthecam'
   }

   stages {
       stage('Git Clone') {
           steps {
               script {
                   try {
                       echo '====== Git Clone 시작 ======'
                       git branch: 'main',
                           url: 'https://lab.ssafy.com/s12-webmobile1-sub1/S12P11D204.git',
                           credentialsId: 'gitlab-user'
                       echo '====== Git Clone 성공 ======'
                   } catch (Exception e) {
                       echo '====== Git Clone 실패 ======'
                       error "Git clone failed: ${e.message}"
                   }
               }
           }
       }

       stage('Build') {
           steps {
               script {
                   try {
                       echo '====== Gradle Build 시작 ======'
                       sh '''
                           cd backend/overthecam
                           chmod +x gradlew
                           ./gradlew build -x test
                       '''
                       echo '====== Gradle Build 성공 ======'
                   } catch (Exception e) {
                       echo '====== Gradle Build 실패 ======'
                       error "Build failed: ${e.message}"
                   }
               }
           }
       }

       stage('Docker Build & Push') {
           steps {
               script {
                   try {
                       echo '====== Docker Build 시작 ======'
                       dir('backend/overthecam') {
                           sh "docker build -t ${DOCKER_IMAGE}:${BUILD_NUMBER} ."
                           echo '====== Docker Build 완료 ======'

                           echo '====== Docker Hub 로그인 시작 ======'
                           sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                           echo '====== Docker Hub 로그인 성공 ======'

                           echo '====== Docker Push 시작 ======'
                           sh "docker push ${DOCKER_IMAGE}:${BUILD_NUMBER}"
                           echo '====== Docker Push 완료 ======'
                       }
                   } catch (Exception e) {
                       echo '====== Docker Build/Push 실패 ======'
                       error "Docker build/push failed: ${e.message}"
                   }
               }
           }
       }

       stage('Deploy to EC2') {
           steps {
               script {
                   try {
                       echo '====== EC2 배포 시작 ======'
                       sshagent(['ssh']) {
                           sh """
                               ssh -o StrictHostKeyChecking=no ubuntu@i12d204.p.ssafy.io '
                               echo "====== Docker 이미지 Pull 시작 ======"
                               docker pull ${DOCKER_IMAGE}:${BUILD_NUMBER}
                               echo "====== 기존 컨테이너 정리 중 ======"
                               docker stop backend || true
                               docker rm backend || true
                               echo "====== 새 컨테이너 실행 중 ======"
                               docker run -d --name backend -p 8080:18080 ${DOCKER_IMAGE}:${BUILD_NUMBER}
                               echo "====== 배포 완료 ======"
                               '
                           """
                       }
                       echo '====== EC2 배포 성공 ======'
                   } catch (Exception e) {
                       echo '====== EC2 배포 실패 ======'
                       error "Deployment failed: ${e.message}"
                   }
               }
           }
       }
   }

   post {
       always {
           echo '====== 파이프라인 종료 ======'
       }
       failure {
           echo '====== 파이프라인 실패 ======'
       }
       success {
           echo '====== 파이프라인 성공 ======'
       }
   }
}